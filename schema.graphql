type User {
    id: ID!
    name: String!
    email: String!
}

type Video {
    id: ID!
    name: String!
    description: String!
    user: User!
    url: String!
    createdAt: Timestamp!
    screenshots: [Screenshot]
    related(limit: Int = 25, offset: Int = 0): [Video!]!
}

type Screenshot {
    id: ID!
    videoId: ID!
    url: String!
}

input NewVideo {
    name: String!
    description: String!
    userId: ID!
    url: String!
}

input NewUser {
    name: String!
    email: String!
}

type Mutation {
    createVideo(input: NewVideo!): Video! @hasRole(role: [ADMIN, USER])
    createUser(user: NewUser!): User!
}

type Query {
    Videos: [Video!]!
    Users: [User!]!
}

type Subscription {
    videoPublished: Video!
}

scalar Timestamp

directive @hasRole(role: [Role!]!) on FIELD_DEFINITION

enum Role {
    ADMIN
    USER
    TEST
}
